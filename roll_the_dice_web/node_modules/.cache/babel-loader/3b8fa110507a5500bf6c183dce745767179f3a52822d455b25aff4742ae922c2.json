{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows\\\\OneDrive\\\\Documentos\\\\Projetos\\\\Area de Producao\\\\directy projetos\\\\documanta\\xE7\\xE3o\\\\roll_the_dice_web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/**\n * @fileoverview Este arquivo define o componente App para um aplicativo de rolagem de dados.\n */\n\n// Importando os estilos do App\nimport \"./App.css\";\n\n// Importando o hook useState do React para gerenciar o estado do componente\nimport { useState } from \"react\";\n\n// Importando a biblioteca Axios para fazer requisições HTTP\nimport Axios from \"axios\";\n\n/**\n * @function App\n * @description Este é o componente principal do aplicativo. Ele define a lógica para rolar um dado e exibir os resultados.\n * @returns {JSX.Element} O JSX para o componente App.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Inicializando o estado do resultado e dos resultados com useState\n  const [resultado, setResultado] = useState();\n  const [resultados, setResultados] = useState([]);\n\n  // Array com os dados disponíveis para rolar\n  const dadosDisponiveis = [2, 4, 6, 10, 20, 100];\n\n  /**\n   * @function rolarDado\n   * @description Esta função faz uma requisição GET para a API que rola um dado com um número específico de lados.\n   * @param {number} lados - O número de lados do dado a ser rolado.\n   */\n  function rolarDado(lados) {\n    console.log(lados);\n\n    // Fazendo uma requisição GET para a API que rola o dado\n    Axios.get(\"http://localhost:3001/dado/\" + lados).then(res => {\n      // Criando um objeto com o resultado da rolagem e o número de lados do dado\n      let rolagem = {\n        resultado: res.data.resultado,\n        lados: lados\n      };\n\n      // Atualizando o estado do resultado e dos resultados com a nova rolagem\n      setResultado(rolagem);\n      setResultados([rolagem, ...resultados]);\n    }).catch(erro => {\n      // Logando qualquer erro que ocorra durante a requisição\n      console.log(erro);\n    });\n  }\n\n  // Renderizando o componente App\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dados\",\n      children: dadosDisponiveis.map(dado => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            rolarDado(dado);\n          },\n          children: `D${dado}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"resultados\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ultimoResultado\",\n        children: [\"\\xDAltimo resultado:\", \" \", resultado ? `${resultado.resultado} - D${resultado.lados}` : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"historicoResultado\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hist\\xF3rico:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), resultados.map((result, i) => {\n          let lados = result.lados;\n          let resultado = result.resultado;\n          let id = i + 1;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [id, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [resultado, \" - D\", lados]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n// Exportando o componente App como padrão\n_s(App, \"2Y1BIR0mjAst1UyAE22fPf11qPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Axios","jsxDEV","_jsxDEV","App","_s","resultado","setResultado","resultados","setResultados","dadosDisponiveis","rolarDado","lados","console","log","get","then","res","rolagem","data","catch","erro","className","children","id","map","dado","onClick","fileName","_jsxFileName","lineNumber","columnNumber","result","i","_c","$RefreshReg$"],"sources":["C:/Users/Windows/OneDrive/Documentos/Projetos/Area de Producao/directy projetos/documantação/roll_the_dice_web/src/App.js"],"sourcesContent":["/**\n * @fileoverview Este arquivo define o componente App para um aplicativo de rolagem de dados.\n */\n\n// Importando os estilos do App\nimport \"./App.css\";\n\n// Importando o hook useState do React para gerenciar o estado do componente\nimport { useState } from \"react\";\n\n// Importando a biblioteca Axios para fazer requisições HTTP\nimport Axios from \"axios\";\n\n/**\n * @function App\n * @description Este é o componente principal do aplicativo. Ele define a lógica para rolar um dado e exibir os resultados.\n * @returns {JSX.Element} O JSX para o componente App.\n */\nfunction App() {\n    // Inicializando o estado do resultado e dos resultados com useState\n    const [resultado, setResultado] = useState();\n    const [resultados, setResultados] = useState([]);\n\n    // Array com os dados disponíveis para rolar\n    const dadosDisponiveis = [2, 4, 6, 10, 20, 100];\n\n    /**\n     * @function rolarDado\n     * @description Esta função faz uma requisição GET para a API que rola um dado com um número específico de lados.\n     * @param {number} lados - O número de lados do dado a ser rolado.\n     */\n    function rolarDado(lados) {\n        console.log(lados);\n\n        // Fazendo uma requisição GET para a API que rola o dado\n        Axios.get(\"http://localhost:3001/dado/\" + lados)\n            .then((res) => {\n                // Criando um objeto com o resultado da rolagem e o número de lados do dado\n                let rolagem = { resultado: res.data.resultado, lados: lados };\n\n                // Atualizando o estado do resultado e dos resultados com a nova rolagem\n                setResultado(rolagem);\n                setResultados([rolagem, ...resultados]);\n            })\n            .catch((erro) => {\n                // Logando qualquer erro que ocorra durante a requisição\n                console.log(erro);\n            });\n    }\n\n    // Renderizando o componente App\n    return (\n        <div className=\"App\">\n            <div id=\"dados\">\n                {/* Mapeando cada dado disponível para um botão que rola o dado quando clicado */}\n                {dadosDisponiveis.map((dado) => {\n                    return (\n                        <button\n                            onClick={() => {\n                                rolarDado(dado);\n                            }}\n                        >\n                            {`D${dado}`}\n                        </button>\n                    );\n                })}\n            </div>\n\n            <div id=\"resultados\">\n                <div id=\"ultimoResultado\">\n                    {/* Exibindo o último resultado da rolagem de dados */}\n                    Último resultado:{\" \"}\n                    {resultado ? `${resultado.resultado} - D${resultado.lados}` : \"\"}\n                </div>\n\n                <div id=\"historicoResultado\">\n                    <h3>Histórico:</h3>\n\n                    {/* Mapeando cada resultado para um elemento de parágrafo */}\n                    {resultados.map((result, i) => {\n                        let lados = result.lados;\n                        let resultado = result.resultado;\n                        let id = i + 1;\n\n                        return (\n                            <p key={i}>\n                                <span>{id}:</span>\n\n                                <span>\n                                    {resultado} - D{lados}\n                                </span>\n                            </p>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n// Exportando o componente App como padrão\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}